// <auto-generated />
using System;
using BurgerHUB.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BurgerHUB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230611180447_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BurgerHUB.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryManID")
                        .HasColumnType("integer");

                    b.Property<int>("IsActive")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryManID");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Validity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountBC")
                        .HasColumnType("integer");

                    b.Property<int>("AmountBM")
                        .HasColumnType("integer");

                    b.Property<int>("BC")
                        .HasColumnType("integer");

                    b.Property<int>("BM")
                        .HasColumnType("integer");

                    b.Property<int>("BurgerConsId")
                        .HasColumnType("integer");

                    b.Property<int>("BurgerMenuId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BurgerConsId");

                    b.HasIndex("BurgerMenuId");

                    b.HasIndex("OrderId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Supplement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("calories")
                        .HasColumnType("integer");

                    b.Property<int>("carbohydrates")
                        .HasColumnType("integer");

                    b.Property<int>("fasts")
                        .HasColumnType("integer");

                    b.Property<int>("proteins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Supplements");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerCons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SupplementId")
                        .HasColumnType("integer");

                    b.Property<int>("Weight_gram")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SupplementId");

                    b.ToTable("BurgerCons");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Composition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CookTime_min")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IMG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IsEco")
                        .HasColumnType("integer");

                    b.Property<int>("IsHit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SupplementId")
                        .HasColumnType("integer");

                    b.Property<int>("Weight_gram")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplementId");

                    b.ToTable("BurgerMenus");
                });

            modelBuilder.Entity("BurgerHUB.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientAdress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Raiting")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BurgerHUB.Models.DeliveryMan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("DeliveryMen");
                });

            modelBuilder.Entity("BurgerHUB.Models.Ingridient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BurgerConsId")
                        .HasColumnType("integer");

                    b.Property<string>("IMG_side")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IMG_top")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("SupplementId")
                        .HasColumnType("integer");

                    b.Property<int>("Weight_gram")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BurgerConsId");

                    b.HasIndex("SupplementId");

                    b.ToTable("Ingridients");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Order", b =>
                {
                    b.HasOne("BurgerHUB.Models.Client", "Client")
                        .WithMany("OrderHistory")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BurgerHUB.Models.DeliveryMan", "DeliveryMan")
                        .WithMany("Order")
                        .HasForeignKey("DeliveryManID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BurgerHUB.Data.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DeliveryMan");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Position", b =>
                {
                    b.HasOne("BurgerHUB.Models.BurgerCons", "BurgerCons")
                        .WithMany("Positions")
                        .HasForeignKey("BurgerConsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BurgerHUB.Models.BurgerMenu", "BurgerMenu")
                        .WithMany("Positions")
                        .HasForeignKey("BurgerMenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BurgerHUB.Data.Models.Order", "Order")
                        .WithMany("Positions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BurgerCons");

                    b.Navigation("BurgerMenu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerCons", b =>
                {
                    b.HasOne("BurgerHUB.Models.Client", null)
                        .WithMany("MyBurgers")
                        .HasForeignKey("ClientId");

                    b.HasOne("BurgerHUB.Data.Models.Supplement", "Supplement")
                        .WithMany()
                        .HasForeignKey("SupplementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplement");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerMenu", b =>
                {
                    b.HasOne("BurgerHUB.Data.Models.Supplement", "Supplement")
                        .WithMany()
                        .HasForeignKey("SupplementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplement");
                });

            modelBuilder.Entity("BurgerHUB.Models.Ingridient", b =>
                {
                    b.HasOne("BurgerHUB.Models.BurgerCons", null)
                        .WithMany("Ingridients")
                        .HasForeignKey("BurgerConsId");

                    b.HasOne("BurgerHUB.Data.Models.Supplement", "Supplement")
                        .WithMany()
                        .HasForeignKey("SupplementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplement");
                });

            modelBuilder.Entity("BurgerHUB.Data.Models.Order", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerCons", b =>
                {
                    b.Navigation("Ingridients");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("BurgerHUB.Models.BurgerMenu", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("BurgerHUB.Models.Client", b =>
                {
                    b.Navigation("MyBurgers");

                    b.Navigation("OrderHistory");
                });

            modelBuilder.Entity("BurgerHUB.Models.DeliveryMan", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
